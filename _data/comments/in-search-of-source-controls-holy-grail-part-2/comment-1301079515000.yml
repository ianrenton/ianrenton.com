name: aefaradien
date: '2011-03-25 18:58:35'
url: ''
message: >-
  <p>Eek... this is a hard one to give a definitive answer to.  Not all of these
  thoughts are tests and none are SVN
  specific.</p><p></p><p><ol><br><li>Everything is a component.  First problem
  with your plan is you are splitting code into two buckts when there is
  probably no nice divide, other than that dictated by
  dependencies.</li><br></ol></p><p></p><p>1.a. Components can depend on each
  other, that is fine.  Use this to track dependencies.  See OSGi for a very
  nice way to do this.</p><p></p><p><ol><br><li></p><p>A product is just a bunch
  of components in a list.  This is how Eclipse/RCP works.  I guess you could
  also think of it as an empty component that depends on lots of other
  components (see apt virtual packages).</p><p></li><br><li></p><p>Do not put
  the build in the product.  Do not mix dependency data with build logic.  Have
  a seperate area in the code base that contains build scripts.  These scripts
  work by examining the depenendency data in the
  components.</p><p></li><br><li></p><p>Do not put binaries in SVN - use NFS or
  similar.  These are going to be versioned by having a version number in the
  file name, so don't bloat SVN with them.  Worst case scynario: have another
  SVN for binaries.  After all, the binaries are just a product of the source -
  never a good idea to store the same data in two
  places.</p><p></li><br><li></p><p>Have a war against hirarachy.  It will
  always be wrong and non-ideal, so best to keep it flat and link it with
  metadata.  See Wikis for a good example. :)</p><p></li><br><li></p><p>Define
  dependency data in a clear abstract way, and let the build logic do the hard
  work.</p><p></li><br></ol></p><p></p><p>If you are committed to using Java, I
  seriously recommend checking out OSGi and the Eclipse build
  tools.</p><p></p><p></p><p>I am happy to talk you through Morrigan's build
  process at some point... its not far off what you need.  Two products (GUI and
  Server) that both share a lot of code.</p>
email: ce2d1bfab069b8d6aa9a0e95d736d9bd
