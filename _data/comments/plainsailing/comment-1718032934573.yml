_id: 36f1cf80-273d-11ef-8958-39a56cb2c777
_parent: 'https://ianrenton.com/projects/planesailing/'
name: Ian
email: b937df7b0b3631249ed5ec118e3bb9e0
message: "Hi,\r\n\r\nI guess that depends on what your personal APIs are! The short answer is \"anything is possible with enough effort\" :)\r\n\r\nVersion 1 of Plane/Sailing was just the Javascript front end, and it connected directly to Dump1090 and AIS Dispatcher on the back end, so it used to work that way. I moved away from that, and introduced a back-end server, because that allowed me to integrate other things such as APRS and also to provide a consistently formatted data set to the front end.\r\n\r\n[Version 1's source code](https://github.com/ianrenton/planesailing/blob/1.0/code.js) should be a good indication of how to do that, if your personal APIs look anything like Dump1090's JSON and AIS Dispatcher's KML APIs. Depending on how you get on with the version 1 user interface, you could either build from there, or fork the current development branch of Plane/Sailing and do some merging of the old code with the new.\r\n\r\nIn the latter case, or if your personal APIs are something else, you'll want to strip out the server telemetry bits from the frontend, and maybe also the difference between a \"first\" call and an \"update\" call that Plane/Sailing currently has to provide track history from before the client connects. You'll then need to query your APIs rather than the server's, and copy values from the incoming data structures into the Plane/Sailing client's `tracks` map.\r\n\r\nLet me know if you'd like any more detail!"
date: '2024-06-10T15:22:14.569Z'
